import numpy as np
import MDAnalysis as mda
from MDAnalysis.lib.distances import calc_dihedrals
import matplotlib.pyplot as plt

def calculate_rama(index_file, trajectory_file, gro_file, time_start, time_end):
    # Load the universe
    u = mda.Universe(gro_file, trajectory_file)

    # Select the atoms of interest (e.g., all amylose atoms)
    with open(index_file, 'r') as f:
        lines1 = f.readlines()
    atom_indices1 = []
    for line in lines1[1:]:
        atom_indices1.extend([int(idx) for idx in line.split()])
    atom_indices1 = [x - 1 for x in atom_indices1]
    amylose = u.atoms[atom_indices1]

    # Initialize lists to store the results
    dihedrals = []

    # Iterate over the trajectory
    for ts in u.trajectory[time_start:time_end]:
        phi_psi = []
        residues = [amylose[i:i+3] for i in range(0, len(amylose), 3)]  # Assuming each residue has 3 atoms
        for i in range(1, len(residues)-1):
            # Define the atoms for phi and psi calculations
            phi_beads = [residues[i-1][1].position, residues[i][0].position, residues[i][1].position, residues[i][2].position]
            psi_beads = [residues[i][0].position, residues[i][1].position, residues[i][2].position, residues[i+1][0].position]
            try:
                phi = calc_dihedrals(*phi_beads)
                psi = calc_dihedrals(*psi_beads)
                phi_psi.append((phi, psi))  # Append the (phi, psi) tuple
            except (KeyError, ValueError) as e:
                continue
        dihedrals.append(phi_psi)

    # Convert the list to a numpy array and filter out invalid entries
    dihedrals = np.array([item for sublist in dihedrals for item in sublist if not np.isnan(item).any()])

    # Convert dihedrals to degrees
    dihedrals_in_degrees = np.degrees(dihedrals)

    # Save phi and psi angles to txt files
    phi = dihedrals_in_degrees[:, 0]
    psi = dihedrals_in_degrees[:, 1]
    np.savetxt('phi.txt', phi, fmt='%.2f', header='Phi')
    np.savetxt('psi.txt', psi, fmt='%.2f', header='Psi')

    # Plot the Ramachandran plot
    plt.scatter(phi, psi, color='black', marker='.', s=1)
    plt.xlim(-180, 180)
    plt.ylim(-180, 180)
    plt.xlabel('Phi')
    plt.ylabel('Psi')
    plt.title('Ramachandran Plot for Amylose')
    plt.show()

    return dihedrals_in_degrees

# Example usage:
trajectory_file = 'outputamy200-1.xtc'
gro_file = 'conf1.gro'
time_start = 0  # Start time frame
time_end = 2500   # End time frame
index_file = 'indexmin42.ndx'
trj_phipsi = calculate_rama(index_file, trajectory_file, gro_file, time_start, time_end)
print(f'Ramachandran angles array shape: {trj_phipsi.shape}')
